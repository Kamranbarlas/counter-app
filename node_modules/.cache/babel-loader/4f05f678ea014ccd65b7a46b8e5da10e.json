{"ast":null,"code":"var _jsxFileName = \"/home/kamran/Projects/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      tags: [] // tags: ['tag1','tag2','tag3']\n\n    };\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no render Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 50\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.tags.length === 0 && \"Please create a new tag!\", this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this); // let classes = this.getBadgeClasses();\n    // return (\n    //     <div>\n    //         <span className={classes}>{this.formatCount()}</span>\n    //         <button className='btn btn-secondary btn-sm'>Increment</button>\n    //     </div>\n    // );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/kamran/Projects/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","renderTags","length","map","tag","render","getBadgeClasses","classes","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAC,CADF;AAEJC,MAAAA,IAAI,EAAC,EAFD,CAGJ;;AAHI,KADoB;AAAA;;AAM5BC,EAAAA,UAAU,GAAE;AACR,QAAI,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAElC,wBAAO;AAAA,gBAAK,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAA3B;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA,iBACK,KAAKP,KAAL,CAAWE,IAAX,CAAgBE,MAAhB,KAA2B,CAA3B,IAAgC,0BADrC,EAEK,KAAKD,UAAL,EAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADK,CAOL;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;AACDK,EAAAA,eAAe,GAAG;AACd,QAAIC,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKT,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOQ,OAAP;AACH;;AAEDC,EAAAA,WAAW,GAAE;AACT,UAAM;AAACT,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AApC2B;;AAuChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = {\n        count:0,\n        tags:[]\n        // tags: ['tag1','tag2','tag3']\n    };\n    renderTags(){\n        if (this.state.tags.length === 0) return <p>There are no render Tags</p>;\n\n        return <ul>{this.state.tags.map(tag => <li>{tag}</li>)}</ul>;\n    }\n    render() { \n        return(\n        <div>\n            {this.state.tags.length === 0 && \"Please create a new tag!\"}\n            {this.renderTags()}\n        </div>\n        );\n        // let classes = this.getBadgeClasses();\n        // return (\n        //     <div>\n        //         <span className={classes}>{this.formatCount()}</span>\n        //         <button className='btn btn-secondary btn-sm'>Increment</button>\n                \n        //     </div>\n        // );\n    }\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount(){\n        const {count} = this.state;\n        return count === 0 ? 'Zero' : count;\n    }\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}