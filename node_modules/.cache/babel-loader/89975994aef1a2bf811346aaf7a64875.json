{"ast":null,"code":"var _jsxFileName = \"/home/kamran/Projects/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      value: this.props.counter.value,\n      // id : this.props.id,\n      tags: [] // tags: ['tag1','tag2','tag3']\n\n    };\n  }\n\n  // constructor(){\n  //     super();\n  //     this.handleIncrement = this.handleIncrement.bind(this);\n  // }\n  // handleIncrement = e => {\n  //     console.log(e);\n  //     this.setState({value: this.state.value + 1})\n  //     console.log(\"Increment Handled\", this.state.value);\n  // }\n  // doHandleIncrement = () => {\n  //     this.handleIncrement({id : 1})\n  // }\n  // renderTags(){\n  //     if (this.state.tags.length === 0) return <p>There are no render Tags</p>;\n  //     return <ul>{this.state.tags.map(tag => <li>{tag}</li>)}</ul>;\n  // }\n  render() {\n    console.log(\"props\", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.props.counter.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onIncrement(this.props.counter),\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-secondary btn-sm m-2\",\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onDelete(this.props.counter.id),\n        className: \"btn btn-danger btn-sm m-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value: count\n    } = this.props.counter;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/kamran/Projects/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","counter","tags","render","console","log","id","getBadgeClasses","formatCount","onIncrement","onDelete","classes","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,KADrB;AAEJ;AACAG,MAAAA,IAAI,EAAC,EAHD,CAIJ;;AAJI,KADoB;AAAA;;AAO5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACAC,EAAAA,MAAM,GAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKL,KAAzB;AACI,wBACI;AAAA,8BACI;AAAA,kBAAK,KAAKA,KAAL,CAAWC,OAAX,CAAmBK;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,kBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAG,MAAM,KAAKR,KAAL,CAAWS,WAAX,CAAuB,KAAKT,KAAL,CAAWC,OAAlC,CAAxB;AAAoE,QAAA,SAAS,EAAC,0BAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWU,QAAX,CAAoB,KAAKV,KAAL,CAAWC,OAAX,CAAmBK,EAAvC,CAAvB;AAAmE,QAAA,SAAS,EAAC,2BAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AACDC,EAAAA,eAAe,GAAG;AACd,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKX,KAAL,CAAWC,OAAX,CAAmBF,KAAnB,KAA6B,CAA7B,GAAiC,SAAjC,GAA6C,SAAxD;AACA,WAAOY,OAAP;AACH;;AAEDH,EAAAA,WAAW,GAAE;AACT,UAAM;AAACT,MAAAA,KAAK,EAAEa;AAAR,QAAiB,KAAKZ,KAAL,CAAWC,OAAlC;AACA,WAAOW,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAhD2B;;AAmDhC,eAAef,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = {\n        value:this.props.counter.value,\n        // id : this.props.id,\n        tags:[]\n        // tags: ['tag1','tag2','tag3']\n    };\n    // constructor(){\n    //     super();\n    //     this.handleIncrement = this.handleIncrement.bind(this);\n    // }\n    // handleIncrement = e => {\n    //     console.log(e);\n    //     this.setState({value: this.state.value + 1})\n    //     console.log(\"Increment Handled\", this.state.value);\n    // }\n\n    // doHandleIncrement = () => {\n    //     this.handleIncrement({id : 1})\n    // }\n\n    // renderTags(){\n    //     if (this.state.tags.length === 0) return <p>There are no render Tags</p>;\n\n    //     return <ul>{this.state.tags.map(tag => <li>{tag}</li>)}</ul>;\n    // }\n    render() { \n    console.log(\"props\",this.props);\n        return (\n            <div>\n                <h4>{this.props.counter.id}</h4>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button onClick={ () => this.props.onIncrement(this.props.counter)} className='btn btn-secondary btn-sm'>Increment</button>\n                <button className=\"btn-secondary btn-sm m-2\">Decrement</button>\n                <button onClick={() => this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\">Delete</button>\n                \n            </div>\n        );\n    }\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount(){\n        const {value: count} = this.props.counter;\n        return count === 0 ? 'Zero' : count;\n    }\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}