{"ast":null,"code":"var _jsxFileName = \"/home/kamran/Projects/counter-app/src/App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from \"./components/counters\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n      console.log(counter);\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n      console.log(\"Event handler called\", counterId);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Counters, {\n          counters: this.state.counters,\n          onReset: this.handleReset,\n          onIncrement: this.handleIncrement,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kamran/Projects/counter-app/src/App.js"],"names":["React","Component","NavBar","Counters","App","handleIncrement","counter","counters","state","index","indexOf","value","setState","console","log","handleReset","map","c","handleDelete","counterId","filter","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SACxBI,eADwB,GACNC,OAAO,IAAI;AAC3B,YAAMC,QAAQ,GAAG,CAAC,GAAI,KAAKC,KAAL,CAAWD,QAAhB,CAAjB;AACA,YAAME,KAAK,GAAGF,QAAQ,CAACG,OAAT,CAAiBJ,OAAjB,CAAd;AACAC,MAAAA,QAAQ,CAACE,KAAD,CAAR,GAAkB,EAAC,GAAGH;AAAJ,OAAlB;AACAC,MAAAA,QAAQ,CAACE,KAAD,CAAR,CAAgBE,KAAhB;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACH,KARyB;;AAAA,SAU1BS,WAV0B,GAUZ,MAAM;AAChB,YAAMR,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAAX,CAAoBS,GAApB,CAAwBC,CAAC,IAAI;AAC5CA,QAAAA,CAAC,CAACN,KAAF,GAAU,CAAV;AACA,eAAOM,CAAP;AAEL,OAJoB,CAAjB;AAKJ,WAAKL,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACC,KAjByB;;AAAA,SAkB1BW,YAlB0B,GAkBVC,SAAD,IAAe;AAC1B,YAAMZ,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAAX,CAAoBa,MAApB,CAA2BH,CAAC,IAAIA,CAAC,CAACI,EAAF,KAASF,SAAzC,CAAjB;AACA,WAAKP,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCK,SAAnC;AACH,KAtByB;AAAA;;AAuB1BG,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,+BAEE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWD,QAA/B;AAAyC,UAAA,OAAO,EAAE,KAAKQ,WAAvD;AAAoE,UAAA,WAAW,EAAE,KAAKV,eAAtF;AAAuG,UAAA,QAAQ,EAAE,KAAKa;AAAtH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAjCyB;;AAsC5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from \"./components/counters\";\nimport './App.css';\n\nclass App extends Component {\n    handleIncrement = counter => {\n      const counters = [... this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = {...counter};\n      counters[index].value++;\n      this.setState({ counters });\n      console.log(counter);\n  }\n\n  handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n        \n  });\n  this.setState({ counters });\n  };\n  handleDelete = (counterId) => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({ counters });\n      console.log(\"Event handler called\",counterId);\n  };\n  render() { \n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className='container'>\n          \n          <Counters counters={this.state.counters} onReset={this.handleReset} onIncrement={this.handleIncrement} onDelete={this.handleDelete}/>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}