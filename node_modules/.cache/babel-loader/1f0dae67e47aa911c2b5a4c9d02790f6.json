{"ast":null,"code":"var _jsxFileName = \"/home/kamran/Projects/counter-app/src/App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from \"./components/counters\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 14,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n      console.log(counter);\n    };\n\n    this.handleDecrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n\n      if (counters[index].value > 0) {\n        counters[index].value--;\n      }\n\n      alert(\"Out of Range!\");\n      this.setState({\n        counters\n      });\n      console.log(counter);\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n      console.log(\"Event handler called\", counterId);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        totalCounters: this.state.counters.filter(c => c.value > 0).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Counters, {\n          counters: this.state.counters,\n          onReset: this.handleReset,\n          onIncrement: this.handleIncrement,\n          onDelete: this.handleDelete,\n          onDecrement: this.handleDecrement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kamran/Projects/counter-app/src/App.js"],"names":["React","Component","NavBar","Counters","App","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","console","log","handleDecrement","alert","handleReset","map","c","handleDelete","counterId","filter","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from \"./components/counters\";\nimport './App.css';\n\nclass App extends Component {\n  state = { \n    counters: [\n        {id:1, value:0},\n        {id:2, value:0},\n        {id:3, value:0},\n        {id:14, value:0}\n        \n    ]\n    \n }; \n    handleIncrement = counter => {\n      const counters = [... this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = {...counter};\n      counters[index].value++;\n      this.setState({ counters });\n      console.log(counter);\n  }\n\n  handleDecrement = counter => {\n    const counters = [... this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = {...counter};\n    if (counters[index].value > 0){\n      counters[index].value--;\n      \n      \n    }\n    \n    alert(\"Out of Range!\");\n    \n    this.setState({ counters });\n    console.log(counter);\n}\n\n  handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n        \n  });\n  this.setState({ counters });\n  };\n  handleDelete = (counterId) => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({ counters });\n      console.log(\"Event handler called\",counterId);\n  };\n  render() { \n    return (\n      <React.Fragment>\n        <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length}/>\n        <main className='container'>\n          \n          <Counters counters={this.state.counters} onReset={this.handleReset} onIncrement={this.handleIncrement} onDelete={this.handleDelete} onDecrement={this.handleDecrement}/>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}